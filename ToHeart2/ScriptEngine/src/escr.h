#pragma once

#ifndef _ESC_H__
#define _ESC_H__

//#ifndef ENCODE
typedef struct {
	TCHAR			*opr;
	unsigned short	code;
} OPRLIST;
//#endif//ENCODE

enum {
	ESC_B=64,
	ESC_BT,
	ESC_BC,
	ESC_BCT,
	ESC_BD,
	ESC_BR,
	ESC_BF,
	ESC_V,
	ESC_H,
//
	ESC_S,
	ESC_Z,
	ESC_FI,
	ESC_FIF,
	ESC_FO,
	ESC_FOF,
	ESC_FB,
	ESC_PFI,
	ESC_PFO,
	ESC_PWI,
	ESC_PWO,
//
	ESC_Q,
	ESC_F,
//
	ESC_C,
	ESC_CR,
	ESC_CP,
	ESC_CL,
	ESC_CY,
	ESC_CB,
	ESC_CA,
	ESC_CW,
	ESC_CRW,
//
	ESC_W,
	ESC_WR,
//
	ESC_KW,
	ESC_K,
//
	ESC_M,
	ESC_MS,
	ESC_MP,
	ESC_MV,
	ESC_MW,
//
	ESC_SE,
	ESC_SEP,
	ESC_SES,
	ESC_SEW,
	ESC_SEV,
	ESC_SEVW,
//
	ESC_SETVOLUMEVOICECHAR,
	ESC_SETVOLUMEVOICESCRIPT,
	ESC_SV,
	ESC_SVEX,
	ESC_VV,
	ESC_VA,
	ESC_VB,
	ESC_VC,
	ESC_VX,
	ESC_VW,
	ESC_VS,
	ESC_VI,
//
	ESC_R,
	ESC_RC,
	ESC_RR,
//
	ESC_LF,
//
	ESC_WE,
	ESC_WER,

//**********  低レベル命令  ***************************************************
	ESC_SETFLAG,
	ESC_GETFLAG,
	ESC_SETGAMEFLAG,
	ESC_GETGAMEFLAG,
	ESC_LOADSCRIPT,
	ESC_GAMEEND,
	ESC_CALLFUNC,
	ESC_VIEWCLOCK,
	ESC_SETWEATHERMODE,
	ESC_SETTIMEMODE,
	ESC_SETTIMEBACK,
	ESC_SETTIMECHAR,
	ESC_SETMATRIX,
	ESC_SHOWCHIPBACK,
	ESC_POSECHIPBACK,
	ESC_PLAYCHIPBACK,
	ESC_SETCHIPBACK,
	ESC_SETCHIPPARTS,
	ESC_SETCHIPSCROLL,
	ESC_SETCHIPSCROLL2,
	ESC_SETCHIPSCROLLSPEED,
	ESC_WAITCHIPSCROLL,
	ESC_WAITCHIPSCROLLSPEED,
	ESC_SETCHIPCHARCASH,
	ESC_RESETCHIPCHARCASH,
	ESC_SETCHIPCHAR,
	ESC_SETCHIPCHARANI,
	ESC_RESETCHIPCHAR,
	ESC_SETCHIPCHARPARAM,
	ESC_SETCHIPCHARBRIGHT,
	ESC_SETCHIPCHARMOVE,
	ESC_SETCHIPCHARMOVE2,
	ESC_SETCHIPCHARMOVESPEED,
	ESC_GETCHIPCHARMOVE,
	ESC_GETCHIPCHARMOVESPEED,
	ESC_COPYCHIPCHARPOS,
	ESC_SETCHIPCHARREV,
	ESC_THROUGHCHIPCHARANI,
	ESC_WAITCHIPCHARREPEAT,
	ESC_WAITCHIPCHARANI,
	ESC_WAITCHIPCHARANILOOP,
	ESC_WAITCHIPCHARAMOVE,
	ESC_GETBACK,
	ESC_SETBACK,
	ESC_SETBACK2,
	ESC_SETCG,
	ESC_SETCG2,
	ESC_SETBACKPOS,
	ESC_SETBACKPOSZ,
	ESC_SETBACKSCROLL,
	ESC_SETBACKSCROLLZ,
	ESC_SETBACKCSCOPE,
	ESC_WAITBACKCSCOPE,
	ESC_LOCKBACKCSCOPE,
	ESC_SETBACKFADEIN,
	ESC_SETBACKFADEOUT,
	ESC_SETBACKFADERGB,
	ESC_SETSHAKE,
	ESC_STOPSHAKE,
	ESC_SETFLASH,
	ESC_SETCHAR,
	ESC_RESETCHAR,
	ESC_SETCHARPOSE,
	ESC_SETCHARLOCATE,
	ESC_SETCHARLAYER,
	ESC_WAITCHAR,
	ESC_SETBLOCK,
	ESC_SETWINDOW,
	ESC_RESETWINDOW,
	ESC_SETMESSAGE,
	ESC_SETMESSAGE2,
	ESC_SETMESSAGEEX,
	ESC_SETCHIPMESSAGE,
	ESC_ADDMESSAGE,
	ESC_ADDMESSAGE2,
	ESC_SETMESSAGEWAIT,
	ESC_RESETMESSAGE,
	ESC_WAITKEY,
	ESC_SETSELECTMES,
	ESC_SETSELECTMESEX,
	ESC_SETSELECT,
	ESC_SETSELECTEX,
	ESC_PLAYBGM,
	ESC_PLAYBGMEX,
	ESC_STOPBGM,
	ESC_STOPBGMEX,
	ESC_SETVOLUMEBGM,
	ESC_SETVOLUMEBGMEX,
	ESC_PLAYSE,
	ESC_PLAYSEEX,
	ESC_STOPSEEX,
	ESC_SETVOLUMESE,
	ESC_SETWEATHER,
	ESC_CHANGEWEATHER,
	ESC_RESETWEATHER,
	ESC_SETLENSFREA,
	ESC_SETWAVEFFECT,
	ESC_RESETWAVEFFECT,
	ESC_SETWARP,
	ESC_RESETWARP,
	ESC_WAITFRAME,
	ESC_SETBMP,
	ESC_SETBMPEX,
	ESC_SETBMP4BMP,
	ESC_SETBMPPRIM,
	ESC_RESETBMP,
	ESC_RESETBMPALL,
	ESC_SETBMPANIME,
	ESC_RESETBMPANIME,
	ESC_WAITBMPANIME,
	ESC_SETTITLE,
	ESC_SETENDING,
	ESC_SETOPENING,
	ESC_SETAVI,
	ESC_RESETAVI,
	ESC_WAITAVI,
	ESC_SETAVIFULL,
	ESC_WAITAVIFULL,
	ESC_SETBMPDISP,
	ESC_SETBMPLAYER,
	ESC_SETBMPPARAM,
	ESC_SETBMPREVPARAM,
	ESC_SETBMPBRIGHT,
	ESC_SETBMPMOVE,
	ESC_SETBMPPOS,
	ESC_SETBMPZOOM,
	ESC_SETBMPZOOM2,
	ESC_SETDEMOFLAG,
	ESC_SETSCENENO,
	ESC_SETENDINGNO,
	ESC_SETREPLAYNO,
	ESC_SETSOUNDEVENT,
	ESC_SETSOUNDEVENTVOLUME,
	ESC_SETPOTAPOTA,
	ESC_GETTIME,
	ESC_WAITTIME,
	ESC_SETTEXTFORMAT,
	ESC_SETTEXTSYNC,
	ESC_SETTEXT,
	ESC_SETTEXTEX,
	ESC_RESETTEXT,
	ESC_WAITTEXT,
	ESC_RESETTEXTALL,
	ESC_SETDEMOFADEFLAG,
	ESC_MOV2,
	ESC_SIN,
	ESC_COS,
	ESC_ABS,
	ESC_SETCUTCUT,
	ESC_SETNOISE,
	ESC_T,
	ESC_SETUSOERR,
	ESC_LOADSCRIPTNUM,
	ESC_SETRIPPLE,
	ESC_SETRIPPLESET,
	ESC_WAITRIPPLE,
	ESC_SETRIPPLELOST,
	ESC_MLW,
	ESC_VT,
	ESC_HT,
	ESC_SETMAPEVENT,
	ESC_VIB,
	ESC_VIEWCALENDER,
	ESC_SETSAKURA,
	ESC_STOPSAKURA,
	ESC_SKIPDATE,
	ESC_SETMOVIE,
	ESC_DEBUGBOX,
	ESC_VHFLAG,
	ESC_GETSYSTEMTIME,
	ESC_OPR_MAX,
};

extern OPRLIST EventOprList[];

#define ESC_NOT		0	//　未使用
#define ESC_ASC		1	//　直値（アスキーコード）
#define ESC_NUM		2	//　数値orレジスタ
#define ESC_STR		3	//　文字列
#define ESC_STR2	4	//　ベタ文字列
#define ESC_REG		5	//　レジスタに取得
#define ESC_CMP		6	//　条件式
#define ESC_ADD		7	//　ADDフラグ
#define ESC_CNT		8	//  センテンスカウンタ
#define ESC_VCNT	9	// 
#define ESC_WAIT	0	//　
#define ESC_NOWAIT	1	//　

//#ifndef MODE

//命令構造体
typedef struct{
	char	type[15];		//引数タイプ
	char	ret;			//ESC_NOWAIT / ESC_WAIT
	char	default_num;	//デフォルト引数の数
}ESCRIPT_OPR;

extern ESCRIPT_OPR	EScroptOpr[];

//#endif//MODE

#endif //_ESC_H__
